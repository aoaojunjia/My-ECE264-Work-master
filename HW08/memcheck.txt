==16970== Memcheck, a memory error detector
==16970== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==16970== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==16970== Command: ./shuf 4
==16970== Parent PID: 16969
==16970== 
--16970-- 
--16970-- Valgrind options:
--16970--    --tool=memcheck
--16970--    --log-file=memcheck.txt
--16970--    --leak-check=full
--16970--    --verbose
--16970-- Contents of /proc/version:
--16970--   Linux version 2.6.32-754.3.5.el6.x86_64 (mockbuild@x86-042.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-23) (GCC) ) #1 SMP Thu Aug 9 11:56:22 EDT 2018
--16970-- Arch and hwcaps: AMD64, amd64-sse3-cx16-avx
--16970-- Page sizes: currently 4096, max supported 4096
--16970-- Valgrind library directory: /usr/lib64/valgrind
--16970-- Reading syms from /home/shay/a/lgoyal/ECE264/solutions/My-ECE264-Work/HW08/shuf
--16970-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--16970--    object doesn't have a dynamic symbol table
--16970-- Reading syms from /lib64/ld-2.12.so
--16970--   Considering /usr/lib/debug/.build-id/1c/c2165e019d43f71fde0a47af9f4c8eb5e51963.debug ..
--16970--   .. build-id is valid
--16970-- Scheduler: using generic scheduler lock implementation.
--16970-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==16970== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-16970-by-lgoyal-on-ecegrid-thin5.ecn.purdue.edu
==16970== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-16970-by-lgoyal-on-ecegrid-thin5.ecn.purdue.edu
==16970== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-16970-by-lgoyal-on-ecegrid-thin5.ecn.purdue.edu
==16970== 
==16970== TO CONTROL THIS PROCESS USING vgdb (which you probably
==16970== don't want to do, unless you know exactly what you're doing,
==16970== or are doing some strange experiment):
==16970==   /usr/lib64/valgrind/../../bin/vgdb --pid=16970 ...command...
==16970== 
==16970== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==16970==   /path/to/gdb ./shuf
==16970== and then give GDB the following command
==16970==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=16970
==16970== --pid is optional if only one valgrind process is running
==16970== 
--16970-- REDIR: 0x35cfe17f90 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--16970-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--16970-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--16970-- REDIR: 0x35cfe17da0 (index) redirected to 0x4a07c30 (index)
--16970-- REDIR: 0x35cfe17e20 (strcmp) redirected to 0x4a08570 (strcmp)
--16970-- Reading syms from /lib64/libc-2.12.so
--16970--   Considering /usr/lib/debug/.build-id/8e/3aace76351b6a83390ca065e904eb82fbd1ec7.debug ..
--16970--   .. build-id is valid
--16970-- REDIR: 0x35d0284d10 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--16970-- REDIR: 0x35d0286fd0 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--16970-- REDIR: 0x35d0282c80 (__GI_strrchr) redirected to 0x4a07ab0 (__GI_strrchr)
--16970-- REDIR: 0x35d02896b0 (memcpy) redirected to 0x4a08b60 (memcpy)
--16970-- REDIR: 0x35d027aa50 (malloc) redirected to 0x4a069ac (malloc)
--16970-- REDIR: 0x35d0282c20 (strncpy) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--16970-- REDIR: 0x35d0334e00 (???) redirected to 0x4a08170 (strncpy)
--16970-- REDIR: 0x35d027b8b0 (free) redirected to 0x4a063a9 (free)
==16970== 
==16970== HEAP SUMMARY:
==16970==     in use at exit: 0 bytes in 0 blocks
==16970==   total heap usage: 2 allocs, 2 frees, 144 bytes allocated
==16970== 
==16970== All heap blocks were freed -- no leaks are possible
==16970== 
==16970== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 8 from 6)
--16970-- 
--16970-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--16970-- used_suppression:      4 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==16970== 
==16970== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 8 from 6)
